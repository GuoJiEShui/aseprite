name: build
on: [push, pull request]
jobs :
build:
runs-on: ${{ matrix.os }}
strategy:
fail-fast: false
matrix:
os:[windows-latest]
build type: [Release]
enable ui: [on]
include :
os:windows-latest-
build type: Releaseenable ui: on
steps:
uses:actions/checkout@v3二
with:
submodules:"recursive
name:ccache
uses:hendrikmuhs/ccache-action@v1
if:runner.os =='Linux'
with:
key:${{ matrix.os }}-${{ matrix.enable ui }}uses:seanmiddleditch/gha-setup-ninija@masteruses:ilammy/msvc-dev-cmd@v1if:runner.os == 'windows'name: Install Dependencies
shell: bash
run :
if[["${{ runner.os }}"=="Linux" ]]; thensudo apt-get update -gq
sudo apt-get install-y
libx11-dev libxcursor-dev libxi-dev
fi
name: Generating Makefiles
shell: bash
run :
if [["${{ runner.os }}” =="windows" ]];then
export enable ccache=off
else
export enable ccache=on
fi
curl -L https://github.com/blueloveTH/aseprite/releases/download/v0.01/skia.zip --output skia.zip7z x skia.zip
cmake -s .-B build -G Ninja 
-DCMAKE BUILD TYPE=$ff matrix.build type }}
-DENABLE UI=$ff matrix.enable ui 
-DENABLE CCACHE$enable ccache 
-DLAF BACKEND=skia
-DSKIA DIR=./skia 
DSKIA LIBRARY DIR=./skia/out/Release-x64
-DSKIA LIBRARY=./skia/out/Release-x64/skia.libname: Compiling
shell: bash
run :
cd build && ninja
uses:actions/upload-artifact@v3
with:
name: aseprite
path:
D:/a/aseprite/aseprite/build/bin/data
D:/a/aseprite/aseprite/build/bin/aseprite.exe
